{% extends 'base.html.twig' %}

{% block body %}
    <img src="" class="fullscreen-image" id="thegif">
    <div id="gifbuffer" style="display:none">
    </div>
    {% embed "::navbar.html.twig" %}
        {% block links %}
            <li>
                <a href="{{ path('slideshow_index') }}"><span class="glyphicon glyphicon-chevron-left"></span></a>
            </li>
            <li>
                <a href="{{ path('slideshow_edit', { 'id': slideshow.id }) }}"><span
                            class="glyphicon glyphicon-edit"></span></a>
            </li>
            <li>
                <a id="play" href="#" class=""><span class="glyphicon glyphicon-play"></span></a>
            </li>
            <li>
                <a id="previous" href="#"><span class="glyphicon glyphicon-fast-backward"></span></a>
            </li>
            <li>
                <a id="next" href="#"><span class="glyphicon glyphicon-fast-forward"></span> </a>
            </li>
            <li class="dropdown">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true"
                   aria-expanded="false"><span class="glyphicon glyphicon-info-sign"></span><span class="caret"></span></a>

                <div class="dropdown-menu">
                    <table>
                        <tbody>
                        <tr>
                            <th>Id</th>
                            <td>{{ slideshow.id }}</td>
                        </tr>
                        <tr>
                            <th>Name</th>
                            <td>{{ slideshow.name }}</td>
                        </tr>
                        <tr>
                            <td>
                                {{ form_start(delete_form) }}
                                <input type="submit" value="Delete">
                                {{ form_end(delete_form) }}
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </li>
        {% endblock %}
    {% endembed %}
{% endblock %}



{% block javascripts %}
    {{ parent() }}
    <script language="javascript">
        var debug = true;
        var autoplayUpdateScheduled = false;
        var gifbuffer = [];
        var numRequests = 0;
        var gifHistory = [];
        var historyIndex = 0;

        function setAutoPlay(enabled) {
            if (enabled) {
                $("#play").addClass("green");
                historyIndex = 0;
                nextGif();
            } else {
                $("#play").removeClass("green");
            }
        }

        function isAutoPlayEnabled() {
            return $("#play").hasClass('green');
        }

        function getBufferLength() {
            //var length = $("#gifbuffer img").length;
            var length = gifbuffer.length;
            debug && console.log("Current buffer length:" + length);
            return length;
        }


        function getGif(display) {
            if (display == undefined) {
                display = false;
            }
            numRequests++;
            jQuery.ajax({
                url: '/slideshow/{{ slideshow.id }}/nextgif',
                success: function (data) {
                    if (display) {
                        displayGif(data);
                    } else {
                        gifbuffer.push(data);
                        /* TODO: we just keep adding images, never removing them from the DOM */
                        $("#gifbuffer").append("<img src='" + data + "'>");
                    }
                    console.log("Appended to buffer: " + data);
                },
                complete: function () {
                    numRequests--;
                }
            });

            if (getBufferLength() + numRequests < 10) {
                getGif(false);
            }
        }

        function displayGif(src) {
            var theGif = $("#thegif");
            theGif.fadeOut(200, function () {
                theGif.attr('src', src);
                theGif.fadeIn(200)
            })
        }

        function toggleAutoPlay() {
            setAutoPlay(!isAutoPlayEnabled());
        }


        function nextGif(triggeredByAutoPlay) {
            if (triggeredByAutoPlay != undefined && triggeredByAutoPlay == true) {
                autoplayUpdateScheduled = false;
                if(!isAutoPlayEnabled()){
                    return;
                }
            }

            if (historyIndex != 0) {
                nextFromHistory();
                return;
            }

            if (getBufferLength() == 0) {
                if (numRequests == 0) {
                    console.log("Unbuffered gif");
                    getGif(true);
                }
                getGif();
                setTimeout(nextGif, 1000);
            } else {
                console.log("Gif from buffer");
                var src = gifbuffer.shift();
                addToHistory(src);
                displayGif(src);
                getGif(false);
            }

            if (isAutoPlayEnabled() && !autoplayUpdateScheduled) {
                autoplayUpdateScheduled = true;
                var delay = {{ slideshow.delay }} * 1000;
                setTimeout(
                        function () {
                            nextGif(true);
                        },
                        delay
                );
            }
        }

        function prevFromHistory() {
            setAutoPlay(false);
            historyIndex++;
            debug && console.log("History index: " + historyIndex);
            if (gifHistory[historyIndex] != undefined) {
                var src = gifHistory[historyIndex];
                displayGif(src);
            }
        }

        function nextFromHistory() {
            historyIndex--;
            debug && console.log("History index: " + historyIndex);
            if (gifHistory[historyIndex] != undefined) {
                var src = gifHistory[historyIndex];
                displayGif(src);
            }
        }

        function resetHistoryIndex() {
            gifHistory = 0;
        }

        function addToHistory(src) {
            gifHistory.unshift(src);
            if (gifHistory.length > 10) {
                gifHistory = gifHistory.slice(0, 10);
            }
        }


        $(document).on('ready', function () {
            //setAutoPlay(true);
            getGif();

            $("#play").on('click', function () {
                toggleAutoPlay();
            });

            $("#next").on('click', function () {
                nextGif();
            });

            $("#previous").on('click', function () {
                prevGif();
            });

            $(document).on('keyup', function (data) {
                //right arrow key
                switch (data.keyCode) {
                    case 39:
                        nextGif();
                        break;
                    case 32:
                        toggleAutoPlay();
                        break;
                    case 37:
                        prevFromHistory();
                        break;
                    default:
                        break;
                }
            });

            $(document).on('keyup', function (data) {
                debug && console.log("Keypress:" + data.keyCode);
            });
        });
    </script>
{% endblock %}
